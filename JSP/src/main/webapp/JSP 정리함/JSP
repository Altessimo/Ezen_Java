JSP 
2021. 11. 29.
	1. jsp : java server pages [ 자바 서버 페이지 ]
	2. 서블릿 : java web program class [ 자바 웹 프로그래밍 클래스 ]
	문제점 : java 와 html 연결 어렵다 -> 보완점 : jsp
	3. jsp : html파일내 java 작성 가능 [ html+java ]
	4. jsp 구동원리
		클라이언트가 jsp 요청하면
		1.html 반환	2. jsp 내 java코드 -> java파일[서블릿]로 변환 -> 실행
			** 클라이언트 들은 java파일 확인 불가능
	5. 태그 
		1. <%!  선언문 %> 	: 1. 변수선언[전역변수] 2.메소드선언 
		2. <%  스크립트문 %>  	: 1.변수선언[지역변수] 2. 실행코드
		3. <%= 표현식 %> 		: 1. html에 java 변수,메소드 호출
		4. <-- 주석 -->		: 주석처리
		<% //한줄 주석   /*여러주석*/	: 스크립트문에서 주석처리 	
	6. 서블릿 ★
		jsp → [jsp 컨테이너] → 서블릿으로 변환
			1. 선언문 → 필드(맴버변수)
			2. 스크립트문 → _jspService 메소드
	Jsp를 요청하면 서블릿으로 변환
	

form
action : "이동할 페이지 경로"
method : 전송방식
	post : 
	get : 
	
	
지시자
	1. page 지시자 : 페이지 속성
		1. <%@ page info="페이지속성내용">
		2. <%@ page language="스크립트에 사용할 언어"> : 스트립트에서 사용할 언어
		3. <%@ page contentType="text/html"> : 페이지 출력할 형식/문자타입
		4. <%@ page import="java.utll.*" %> : 패키지 혹은 클래스 불러오기
		5. <%@ page errorPage=""%> : 예외발생시 출력할 페이지 명
			예외 페이지에 <%@ page isErrorPage="true" %> : 해당 페이지 예외페이지 설정
			
	2. include 지시자 : 페이지 포함
		<%@ %> : 현재페이지에 페이지 포함
	
액션 태그
	1. <jsp:include page="페이지명"></jsp:include> : 현재페이지에 페이지 포함
	2. <jsp:forward page="페이지명"></jsp:forward> : 현재페이지에 페이지 이동
			<jsp:param value="데이터" name="변수명">
	3. 태그 다체 액션태그
		<%! %> : <jsp:declaration></declaration> // 선언문
		<% %> : <jsp:scriptlet></scriptlet>
		<%= %> : <jsp:expression></expression> // 표현식
	4. ★ 중요 자바빈즈[객체 통신 태그]
	
내장객체[미리 만들어진 객체]
	1. request : 변수를 포함한 요청을 닿는 객체
		0. request.setCharacterEncoding("UTF-8") : 요청문자 타입
		1. request.getParameter("변수명") : 해당 변수 요청[무조건 문자로 밖에 안됌]
		2.
	2. response : 요청에 대한 응답을 담고 있는 객체
		응답을 이미 가지고 있음
	3. out : 출력 스트림 객체
	4. sesstion : 세션정보를 담고 있는 객체
	5. page : jsp 서블릿 객체[서블릿 페이지 정보]
	6. exception : 예외
	
요청과 응답[request, response]


Post vs get[페이지(데이터) 요청 방식]
1. post
	1. url 요청된 변수가 표시 X
	2. 보안[로그인, 개인정보 등]
	3. 캐시사용 X [한번 사용 후 기록 X]
	4. 길이제한 X
	
2. get
	1. url 요청된 변수가 표시 O
	2. 보안 취약[제품명, 검색 등]
	3. 캐시사용 [한번 사용 후 기록] : 다음에 접속할 때 빠름
	4. 길이제한 O

사용처
	1. form(action="이동페이지경로" method="post.get")
	2. URL 변수 추가[get]
	3. 
		
	
세션 vs 쿠키
내장객체(http: 클래스의 객체
	1. 세션[내장객체 (httpSesstion 클래스의 객체)] - 서버에 저장
		서버 Pc에 테이터 저장[웹페이지 전반적으로 걸쳐 사용되는 변수] = 쿠키도 가능(사용자에게)
			1. 서버에 저장하다보니 보안(개인정보 등)
			2. 많은 세션 사용시 서버 부화(서버가 느려짐)
			3. 세션 유지 시간
			4. [서버 내 세션저장소] 부여된 세션으로 홈페이지 활동
			
		1. session.setAttribute("세션명", "데이터") : 세션 추가 // 집어 넣기
		2. session.getAttribute("세션명") : 세션 호출 // 빼오기
		3. session.invalidate() : 모든 세션 초기화
			. sesstion.setAttribute("세션명", null) : 해당 세션 초기화
		4. session.setMaxInactiveInterval(초) : 세션 유지 시간[초당]
			
	2. 쿠키 [Jsp X 내장객체]
		사용자[클라이언트] Pc에 데이터 저장[웹페이지 전반적으로 걸쳐 사용]
			1. 사용자 pc에 저장하다보니 보안 취약[장바구니 , 로그인 정보 등]
			2. 많은 쿠키를 사용시 서버 상관 X (컴퓨터, 인터넷이 느려짐)
			3. 브라우저 많아도 쿠키유지
		Cookie 쿠키 객체면 = new Cookie("쿠키명", 데이터); : 쿠키생성
		response.addCookie(쿠키객체명) : 클라이언트(브라우저) 쿠키저장
			쿠키객체명.setMaxAge(초) : 쿠카의 생명주기
			쿠키객체명.setValue : 쿠키 데이터 교환
			 : 모든 쿠키요청[호출]
			 
상대경로 vs 절대경로
	1. 절대경로
		localhost:8080 : 최상위 경로 ~~~
			/ 최상위 경로/폴더명/폴더명/파일명
	2. 상대경로
		현재 페이지 기준으로 
		/ : 최상경로
		../ : 상위경로
			../../ : 2번 위로 이동
		./ : 현재경로[생략가능]